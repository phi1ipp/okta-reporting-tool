name: .NET Core

on:
  push:
    tags:
    - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:      
    - name: Checkout custom okta-sdk-dotnet
      uses: actions/checkout@v2
      with:
          repository: 'phi1ipp/okta-sdk-dotnet'
          path: './okta-sdk-dotnet'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: Build custom Okta SDK
      run: cd okta-sdk-dotnet/src/Okta.Sdk && dotnet pack -c Release
            
    - uses: actions/checkout@v2
      with:
        path: './reporting-tool' 
      
    - run: cd reporting-tool/reporting-tool && dotnet nuget add source $GITHUB_WORKSPACE/okta-sdk-dotnet/src/Okta.Sdk/bin/Release 

    - run: dotnet publish -c Release -r win10-x64 && cd bin/Release/net5.0/win10-x64/publish &&
            zip $GITHUB_WORKSPACE/reporting-tool-win10-x64.zip *
            
    - run: dotnet publish -c Release --os linux && cd bin/Release/net5.0/win10-x64/publish &&
            zip $GITHUB_WORKSPACE/reporting-tool-linux.zip *

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-win-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./reporting-tool-win10-x64.zip
        asset_name: reporting-tool-win10-x64.zip
        asset_content_type: application/zip
